[{"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\Navaibar.js":"2","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\store.js":"3","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\MapPage.js":"4","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\App.js":"5","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\NaverMapComponent.js":"6","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\ChartPage.js":"7","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\SubwayPage.js":"8"},{"size":293,"mtime":1607426451857,"results":"9","hashOfConfig":"10"},{"size":1977,"mtime":1607532961481,"results":"11","hashOfConfig":"10"},{"size":1496,"mtime":1607361295551,"results":"12","hashOfConfig":"10"},{"size":748,"mtime":1607419947319,"results":"13","hashOfConfig":"10"},{"size":204,"mtime":1607246157944,"results":"14","hashOfConfig":"10"},{"size":16275,"mtime":1607530182195,"results":"15","hashOfConfig":"10"},{"size":206,"mtime":1607270394249,"results":"16","hashOfConfig":"10"},{"size":6153,"mtime":1607525150026,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12op0yh",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\index.js",[],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\Navaibar.js",["35"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\store.js",[],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\MapPage.js",["36","37"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\NaverMapComponent.js",["38","39"],"import React, { useEffect, useState } from 'react';\r\n// navermap 관련\r\nimport { NaverMap, Marker } from 'react-naver-maps';\r\nimport Swal from 'sweetalert2'\r\n// Component 관련\r\nimport '../CSSs/NaverMapComponent.css';\r\n// Data 관련\r\nimport ClassInfo from '../Data/ClassInfo.json';\r\n// Image 관련\r\nimport placeholder from '../Images/placeholder.png';\r\n// redux 관련\r\nimport { connect } from 'react-redux';\r\nimport { actionCreators } from '../store';\r\n\r\n\r\n// Data관련\r\nimport ChildrenWelfareFacility from '../Data/ChildrenWelfareFacility.json';\r\nimport DaycareCenter from '../Data/DaycareCenter.json';\r\nimport DisableEmployeeFacility from '../Data/DisableEmployeeFacility.json';\r\nimport DisableFacility from '../Data/DisableFacility.json';\r\nimport GeneralHospital from '../Data/GeneralHospital.json';\r\nimport KinderGarden from '../Data/KinderGarden.json';\r\nimport PoliceBox from '../Data/PoliceBox.json';\r\nimport PublicHealth from '../Data/PublicHealth.json';\r\nimport PublicToilet from '../Data/PublicToliet.json';\r\nimport Shlter from '../Data/Shelter.json';\r\nimport SpecialSchool from '../Data/SpecialSchool.json';\r\nimport WelfareCenter from '../Data/WelfareCenter.json';\r\n\r\n// 장애인 편의시설 종류 배열\r\nlet region = ['강남구', '강북구', '강서구', '관악구', '광산구', '광양시', '광주시', '구로구', '구미시', '군산시', '금정구', '금천구',\r\n  '남구', '남동구', '남양주시', '노원구', '대덕구', '도봉구', '동구', '동래구', '동작구', '마포구', '목포시', '미추홀구', '부천시', '부평구',\r\n  '북구', '사상구', '사하구', '서구', '서대문구', '성남시', '성동구', '송파구', '수성구', '수영구', '수원시', '순천시', '안동시', '안산시',\r\n  '연수구', '연제구', '영등포구', '영암군', '완주군', '은평구', '의정부시', '전주시', '정읍시', '제주시', '종로구', '중구', '춘천시',\r\n  '충주시', '포항시', '하남시', '해운대구', '화성시'];\r\nlet Faclities = ['아동복지시설', '어린이집', '장애인고용공단', '장애인복지시설', '종합병원', '유치원집', '파출소', '보건소', '공용화장실', '대피소', '특수학교', '노인복지시설(경로당포함)'];\r\n\r\n\r\nfunction NaverMapComponent(props) {\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■state관련\r\n  const [Center, setCenter] = useState({\r\n    lat: 37.497175,\r\n    lng: 127.027926\r\n  })\r\n  const [MyPosition, setMyPosition] = useState({\r\n    lat: 0,\r\n    lng: 0\r\n  })\r\n  const [ClassTypes, setClassTypes] = useState([]);\r\n  const [MarkerContainer, setMarkerContainer] = useState([]);\r\n  const [SportType, setSportType] = useState('');\r\n  const [SportType2, setSportType2] = useState('');\r\n  const [SportType3, setSportType3] = useState('');\r\n\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■function 관련\r\n  function getLocation() {\r\n    if (navigator.geolocation) { // GPS를 지원하면\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setCenter({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        })\r\n        setMyPosition({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        })\r\n        props.updateState(position.coords.latitude, position.coords.longitude)\r\n      }, function (error) {\r\n        console.error(error);\r\n      }, {\r\n        enableHighAccuracy: false,\r\n        maximumAge: 0,\r\n        timeout: Infinity\r\n      });\r\n    } else {\r\n      alert('GPS를 지원하지 않습니다');\r\n    }\r\n  }\r\n\r\n\r\n  function PanToMe() {\r\n    getLocation();\r\n  }\r\n\r\n  function GetClassInfo() {\r\n    let title = new Set();\r\n    ClassInfo.forEach(data => title.add(data[5]));\r\n    setClassTypes(Array.from(title));\r\n    console.log(ClassTypes)\r\n  }\r\n\r\n  // 운동시설 Marker 만드는 함수\r\n  function MakeMarker(type) {\r\n    let Made = [];\r\n    if(type === '' || type === null) alert(\"종목을 선택해주세요.\");\r\n    else{\r\n      ClassInfo.forEach((data, index) => {\r\n        if (data[5] === type) {\r\n          Made.push(\r\n            <Marker\r\n              key={index}\r\n              position={{ lat: data[7], lng: data[6] }}\r\n              animation={2}\r\n              onClick={() => {\r\n                Swal.fire({\r\n                  title: data[1],\r\n                  text: data[3] + data[4],\r\n                })\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      })\r\n    }\r\n    \r\n    console.log(Made)\r\n    setMarkerContainer(Made);\r\n    setSportType2('');\r\n    setSportType3('');\r\n  }\r\n\r\n  // 편의시설 Marker 만드는 함수 ( region : 구,시,군 선택     type : 파출소, 등 선택)\r\n  function MakeMarker2(region, type) {\r\n    if (region === '' || region === null || region === 'null') {\r\n      alert(\"지역을 선택해주세요.\");\r\n    } else if (type === '' || type === null || type === 'null') {\r\n      alert(\"시설종류를 선택해주세요.\");\r\n    }\r\n    else {\r\n      let Made = [];\r\n      switch (type) {\r\n        case '아동복지시설':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          ChildrenWelfareFacility.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '어린이집':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          DaycareCenter.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '장애인고용공단':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          DisableEmployeeFacility.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '장애인복지시설':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          DisableFacility.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '종합병원':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          GeneralHospital.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '유치원집':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          KinderGarden.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '파출소':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          PoliceBox.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '보건소':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          PublicHealth.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '공용화장실':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          PublicToilet.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '대피소':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          Shlter.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '특수학교':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          SpecialSchool.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '노인복지시설(경로당포함)':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          WelfareCenter.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ useEffect\r\n  useEffect(() => {\r\n    getLocation();\r\n    GetClassInfo();\r\n\r\n  }, [])\r\n\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ return\r\n  return (\r\n    <div className=\"Router_Div\">\r\n      <div className=\"TitleLine_BackPoint\"></div>\r\n      <div className=\"TitleLine\">\r\n        <p>장애인 스포츠 강좌 이용권으로 등록가능한 시설입니다.</p>\r\n        <p>찾으시는 종목을 선택하시면 해당 체육시설 또는 편의시설들이 표시됩니다.</p>\r\n        <span className=\"SelectMenu_span1\">종목 : </span>\r\n        <select className=\"SelectMenu\" onChange={(e) => { setSportType(e.target.value) }} value={SportType}>\r\n          <option value=''>선택하세요.</option>\r\n          {ClassTypes.map((data, index) => {\r\n            return <option key={index} value={data}>{data}</option>\r\n          })}\r\n        </select>\r\n        <div className=\"SelectBTN\" onClick={() => { MakeMarker(SportType) }}></div>\r\n\r\n\r\n        {/* 지역 및 편의시설 select */}\r\n        <span className=\"SelectMenu_span2\">편의시설 : </span>\r\n        <select className=\"SelectMenu\" onChange={(e) => { setSportType2(e.target.value) }} value={SportType2}>\r\n          <option value=\"\">지역(시,군,구)</option>\r\n          {region.map((data, index) => {\r\n            return <option key={index} value={data}>{data}</option>\r\n          })}\r\n        </select>\r\n        <select className=\"SelectMenu\" onChange={(e) => { setSportType3(e.target.value) }} value={SportType3}>\r\n          <option value=\"\">시설종류</option>\r\n          {Faclities.map((data, index) => {\r\n            return <option key={index} value={data}>{data}</option>\r\n          })}\r\n        </select>\r\n        <div className=\"SelectBTN\" onClick={() => { MakeMarker2(SportType2, SportType3) }}></div>\r\n      </div>\r\n      <NaverMap\r\n        id=\"react-naver-maps-introduction\"\r\n        style={{ width: '1100px', height: '650px' }}\r\n        center={Center}\r\n        defaultZoom={10}\r\n      >\r\n\r\n        <div className=\"ToMeBTN\" onClick={PanToMe} />\r\n        <Marker\r\n          key=\"mypos\"\r\n          position={MyPosition}\r\n          animation={2}\r\n          icon={placeholder}\r\n        />\r\n        {MarkerContainer}\r\n      </NaverMap>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n// reducer에 action을 알리는 함수 \r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateState: (x, y) => dispatch(actionCreators.updateState(x, y))\r\n  };\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(NaverMapComponent);","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\ChartPage.js",["40","41","42"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\SubwayPage.js",["43","44","45","46","47","48"],{"ruleId":"49","severity":1,"message":"50","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":6,"column":10,"nodeType":"51","messageId":"52","endLine":6,"endColumn":17},{"ruleId":"49","severity":1,"message":"54","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":133,"column":7,"nodeType":"57","messageId":"58","endLine":386,"endColumn":8},{"ruleId":"59","severity":1,"message":"60","line":400,"column":6,"nodeType":"61","endLine":400,"endColumn":8,"suggestions":"62"},{"ruleId":"49","severity":1,"message":"63","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"64","line":1,"column":28,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"65","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":17},{"ruleId":"49","severity":1,"message":"66","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":15},{"ruleId":"49","severity":1,"message":"67","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":24},{"ruleId":"49","severity":1,"message":"68","line":20,"column":5,"nodeType":"51","messageId":"52","endLine":20,"endColumn":10},{"ruleId":"49","severity":1,"message":"69","line":25,"column":19,"nodeType":"51","messageId":"52","endLine":25,"endColumn":27},{"ruleId":"49","severity":1,"message":"70","line":57,"column":23,"nodeType":"51","messageId":"52","endLine":57,"endColumn":31},{"ruleId":"59","severity":1,"message":"71","line":108,"column":8,"nodeType":"61","endLine":108,"endColumn":10,"suggestions":"72"},"no-unused-vars","'NaverMapComponent' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'actionCreators' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetClassInfo' and 'getLocation'. Either include them or remove the dependency array.","ArrayExpression",["73"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'ClassInfo' is defined but never used.","'Modal' is defined but never used.","'CircularProgress' is defined but never used.","'list2' is assigned a value but never used.","'setMyPos' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStationTimeData' and 'props.POS'. Either include them or remove the dependency array.",["74"],{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [GetClassInfo, getLocation]",{"range":"79","text":"80"},"Update the dependencies array to be: [getStationTimeData, props.POS]",{"range":"81","text":"82"},[12274,12276],"[GetClassInfo, getLocation]",[4304,4306],"[getStationTimeData, props.POS]"]