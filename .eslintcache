[{"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\Navaibar.js":"2","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\NaverMapComponent.js":"3","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\MapPage.js":"4","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\SubwayPage.js":"5","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\ChartPage.js":"6","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\App.js":"7","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\store.js":"8"},{"size":293,"mtime":1607426451857,"results":"9","hashOfConfig":"10"},{"size":4106,"mtime":1607769644791,"results":"11","hashOfConfig":"10"},{"size":16502,"mtime":1607624403639,"results":"12","hashOfConfig":"10"},{"size":748,"mtime":1607419947319,"results":"13","hashOfConfig":"10"},{"size":6303,"mtime":1607772989718,"results":"14","hashOfConfig":"10"},{"size":17371,"mtime":1607775955715,"results":"15","hashOfConfig":"10"},{"size":204,"mtime":1607246157944,"results":"16","hashOfConfig":"10"},{"size":1496,"mtime":1607361295551,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12op0yh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\index.js",[],["39","40"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\Navaibar.js",["41","42"],"import React, { useState } from 'react';\r\nimport '../CSSs/Navibar.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Chart from './ChartPage';\r\nimport MapPage from './MapPage';\r\nimport NaverMapComponent from './NaverMapComponent';\r\nimport SubwayPage from './SubwayPage';\r\n\r\nimport hamburgerImage from '../Images/hamburgerImage.png';\r\n\r\nfunction Navibar(props) {\r\n\r\n    const [DP1, setDP1] = useState('linkitem');\r\n    const [DP2, setDP2] = useState('linkitem');\r\n    const [DP3, setDP3] = useState('linkitem');\r\n\r\n    const [DPofMobileNavi, setDPofMobileNavi] = useState('Navi_Mobile_hide');\r\n    const [DPofHamburger, setDPofHamburger] =useState('Hamburger_show');\r\n    return (\r\n        <Router basename=\"/FacMap\">\r\n            {/* 테블릿, 데스크탑에서 보여질 네비게이션 바 */}\r\n            <div className=\"Navibar\">\r\n                <p className=\"Navibar_text\">장애인 운동 시설 및 편의시설</p>\r\n                <div className=\"menu_icon\"></div>\r\n                <Link onClick={() => {\r\n                    setDP1('linkitem menu1_clicked')\r\n                    setDP2('linkitem');\r\n                    setDP3('linkitem')\r\n                }} className={DP1 + ' menu1'} to=\"/\">운동시설 지도</Link>\r\n                <Link onClick={() => {\r\n                    setDP1('linkitem')\r\n                    setDP2('linkitem menu2_clicked');\r\n                    setDP3('linkitem')\r\n                }} className={DP2 + ' menu2'} to=\"/subway\">공사중 지하철</Link>\r\n                <Link onClick={() => {\r\n                    setDP1('linkitem')\r\n                    setDP2('linkitem');\r\n                    setDP3('linkitem menu3_clicked')\r\n                }} className={DP3 + ' menu3'} to=\"/chart\">시설 분포 차트</Link>\r\n\r\n\r\n                <div className=\"footer\">\r\n                    <p>문의 : snstkfka02@hanmail.net</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 모바일에서 보여질 네비게이션 바 */}\r\n            <div className={DPofHamburger} onClick={()=>{\r\n                setDPofMobileNavi('Navi_Mobile_show');\r\n                setDPofHamburger('Hamburger_hide');\r\n            }}></div>\r\n            <div className={DPofMobileNavi}>\r\n                <div className=\"Xbtn\" onClick={()=>{\r\n                    setDPofHamburger('Hamburger_show');\r\n                    setDPofMobileNavi('Navi_Mobile_hide')\r\n                }}></div>\r\n                <p className=\"Navibar_text\">장애인 운동 시설 및 편의시설</p>\r\n                <div className=\"menu_icon\"></div>\r\n                <Link onClick={() => {\r\n                    setDP1('linkitem menu1_clicked')\r\n                    setDP2('linkitem');\r\n                    setDP3('linkitem')\r\n                    setDPofMobileNavi('Navi_Mobile_hide');\r\n                    setDPofHamburger('Hamburger_show');\r\n                }} className={DP1 + ' menu1'} to=\"/\">운동시설 지도</Link>\r\n                <Link onClick={() => {\r\n                    setDP1('linkitem')\r\n                    setDP2('linkitem menu2_clicked');\r\n                    setDP3('linkitem')\r\n                    setDPofMobileNavi('Navi_Mobile_hide');\r\n                    setDPofHamburger('Hamburger_show');\r\n                }} className={DP2 + ' menu2'} to=\"/subway\">공사중 지하철</Link>\r\n                <Link onClick={() => {\r\n                    setDP1('linkitem')\r\n                    setDP2('linkitem');\r\n                    setDP3('linkitem menu3_clicked')\r\n                    setDPofMobileNavi('Navi_Mobile_hide');\r\n                    setDPofHamburger('Hamburger_show');\r\n                }} className={DP3 + ' menu3'} to=\"/chart\">시설 분포 차트</Link>\r\n            </div>\r\n\r\n            <div className=\"Navibar_Content\" style={{ textAlign: \"center\", width: '100%' }} >\r\n                <Route exact path=\"/\" component={MapPage} />\r\n                <Route path=\"/subway\" component={SubwayPage} />\r\n                <Route path=\"/chart\" component={Chart} />\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Navibar;\r\n\r\n\r\n","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\NaverMapComponent.js",["43","44","45"],"import React, { useEffect, useState } from 'react';\r\n// navermap 관련\r\nimport { NaverMap, Marker } from 'react-naver-maps';\r\nimport Swal from 'sweetalert2'\r\n// Component 관련\r\nimport '../CSSs/NaverMapComponent.css';\r\n// Data 관련\r\nimport ClassInfo from '../Data/ClassInfo.json';\r\n// Image 관련\r\nimport placeholder from '../Images/placeholder.png';\r\nimport menuIcon from '../Images/menuIcon.png';\r\n// redux 관련\r\nimport { connect } from 'react-redux';\r\nimport { actionCreators } from '../store';\r\n\r\n\r\n// Data관련\r\nimport ChildrenWelfareFacility from '../Data/ChildrenWelfareFacility.json';\r\nimport DaycareCenter from '../Data/DaycareCenter.json';\r\nimport DisableEmployeeFacility from '../Data/DisableEmployeeFacility.json';\r\nimport DisableFacility from '../Data/DisableFacility.json';\r\nimport GeneralHospital from '../Data/GeneralHospital.json';\r\nimport KinderGarden from '../Data/KinderGarden.json';\r\nimport PoliceBox from '../Data/PoliceBox.json';\r\nimport PublicHealth from '../Data/PublicHealth.json';\r\nimport PublicToilet from '../Data/PublicToliet.json';\r\nimport Shlter from '../Data/Shelter.json';\r\nimport SpecialSchool from '../Data/SpecialSchool.json';\r\nimport WelfareCenter from '../Data/WelfareCenter.json';\r\n\r\n// 장애인 편의시설 종류 배열\r\nlet region = ['강남구', '강북구', '강서구', '관악구', '광산구', '광양시', '광주시', '구로구', '구미시', '군산시', '금정구', '금천구',\r\n  '남구', '남동구', '남양주시', '노원구', '대덕구', '도봉구', '동구', '동래구', '동작구', '마포구', '목포시', '미추홀구', '부천시', '부평구',\r\n  '북구', '사상구', '사하구', '서구', '서대문구', '성남시', '성동구', '송파구', '수성구', '수영구', '수원시', '순천시', '안동시', '안산시',\r\n  '연수구', '연제구', '영등포구', '영암군', '완주군', '은평구', '의정부시', '전주시', '정읍시', '제주시', '종로구', '중구', '춘천시',\r\n  '충주시', '포항시', '하남시', '해운대구', '화성시'];\r\nlet Faclities = ['아동복지시설', '어린이집', '장애인고용공단', '장애인복지시설', '종합병원', '유치원집', '파출소', '보건소', '공용화장실', '대피소', '특수학교', '노인복지시설(경로당포함)'];\r\n\r\n\r\nfunction NaverMapComponent(props) {\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■state관련\r\n  const [Center, setCenter] = useState({\r\n    lat: 37.497175,\r\n    lng: 127.027926\r\n  })\r\n  const [MyPosition, setMyPosition] = useState({\r\n    lat: 0,\r\n    lng: 0\r\n  })\r\n  const [ClassTypes, setClassTypes] = useState([]);\r\n  const [MarkerContainer, setMarkerContainer] = useState([]);\r\n  const [SportType, setSportType] = useState('');\r\n  const [SportType2, setSportType2] = useState('');\r\n  const [SportType3, setSportType3] = useState('');\r\n\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■function 관련\r\n  function getLocation() {\r\n    if (navigator.geolocation) { // GPS를 지원하면\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setCenter({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        })\r\n        setMyPosition({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        })\r\n        props.updateState(position.coords.latitude, position.coords.longitude)\r\n      }, function (error) {\r\n        console.error(error);\r\n      }, {\r\n        enableHighAccuracy: false,\r\n        maximumAge: 0,\r\n        timeout: Infinity\r\n      });\r\n    } else {\r\n      alert('GPS를 지원하지 않습니다');\r\n    }\r\n  }\r\n\r\n\r\n  function PanToMe() {\r\n    getLocation();\r\n  }\r\n\r\n  function GetClassInfo() {\r\n    let title = new Set();\r\n    ClassInfo.forEach(data => title.add(data[5]));\r\n    setClassTypes(Array.from(title));\r\n    console.log(ClassTypes)\r\n  }\r\n\r\n  // 운동시설 Marker 만드는 함수\r\n  function MakeMarker(type) {\r\n    let Made = [];\r\n    if(type === '' || type === null) alert(\"종목을 선택해주세요.\");\r\n    else{\r\n      ClassInfo.forEach((data, index) => {\r\n        if (data[5] === type) {\r\n          Made.push(\r\n            <Marker\r\n              key={index}\r\n              position={{ lat: data[7], lng: data[6] }}\r\n              animation={2}\r\n              onClick={() => {\r\n                Swal.fire({\r\n                  title: data[1],\r\n                  text: data[3] + data[4],\r\n                })\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      })\r\n    }\r\n    \r\n    console.log(Made)\r\n    setMarkerContainer(Made);\r\n    setSportType2('');\r\n    setSportType3('');\r\n  }\r\n\r\n  // 편의시설 Marker 만드는 함수 ( region : 구,시,군 선택     type : 파출소, 등 선택)\r\n  function MakeMarker2(region, type) {\r\n    if (region === '' || region === null || region === 'null') {\r\n      alert(\"지역을 선택해주세요.\");\r\n    } else if (type === '' || type === null || type === 'null') {\r\n      alert(\"시설종류를 선택해주세요.\");\r\n    }\r\n    else {\r\n      let Made = [];\r\n      switch (type) {\r\n        case '아동복지시설':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          ChildrenWelfareFacility.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '어린이집':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          DaycareCenter.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '장애인고용공단':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          DisableEmployeeFacility.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '장애인복지시설':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          DisableFacility.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '종합병원':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          GeneralHospital.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '유치원집':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          KinderGarden.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '파출소':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          PoliceBox.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '보건소':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          PublicHealth.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '공용화장실':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          PublicToilet.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '대피소':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          Shlter.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '특수학교':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          SpecialSchool.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n        case '노인복지시설(경로당포함)':\r\n          Made = []; //초기화해야 다른 걸 또 선택했을 때 중복안됨\r\n          WelfareCenter.forEach((data, index) => {\r\n            if (data[0] === region) {\r\n              Made.push(\r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: data[3], lng: data[2] }}\r\n                  animation={2}\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: data[1],\r\n                    })\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          })\r\n          setMarkerContainer(Made);\r\n          setSportType('');\r\n          break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ useEffect\r\n  useEffect(() => {\r\n    getLocation();\r\n    GetClassInfo();\r\n\r\n  }, [])\r\n\r\n\r\n  // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ return\r\n  return (\r\n    <div className=\"Router_Div\">\r\n      <div className=\"TitleLine_BackPoint\"></div>\r\n      <div className=\"TitleLine\">\r\n        <p className=\"Mobile_text1\"><img className=\"TopMenuIcon\" src={menuIcon}/> 장애인 운동시설 및 편의시설</p>\r\n        <p className=\"Titleline_text2\">장애인 스포츠 강좌 이용권으로 등록가능한 시설입니다.</p>\r\n        <p className=\"Titleline_text2\">찾으시는 종목을 선택하시면 해당 체육시설 또는 편의시설들이 표시됩니다.</p>\r\n        <span className=\"SelectMenu_span1\">종목 : </span>\r\n        <select className=\"SelectMenu\" onChange={(e) => { setSportType(e.target.value) }} value={SportType}>\r\n          <option value=''>선택하세요.</option>\r\n          {ClassTypes.map((data, index) => {\r\n            return <option key={index} value={data}>{data}</option>\r\n          })}\r\n        </select>\r\n        <div className=\"SelectBTN\" onClick={() => { MakeMarker(SportType) }}></div>\r\n\r\n        <div className=\"Mobile_EnterLine\"></div>\r\n\r\n        {/* 지역 및 편의시설 select */}\r\n        <span className=\"SelectMenu_span2\">편의시설 : </span>\r\n        <select className=\"SelectMenu\" onChange={(e) => { setSportType2(e.target.value) }} value={SportType2}>\r\n          <option value=\"\">지역(시,군,구)</option>\r\n          {region.map((data, index) => {\r\n            return <option key={index} value={data}>{data}</option>\r\n          })}\r\n        </select>\r\n        <select className=\"SelectMenu\" onChange={(e) => { setSportType3(e.target.value) }} value={SportType3}>\r\n          <option value=\"\">시설종류</option>\r\n          {Faclities.map((data, index) => {\r\n            return <option key={index} value={data}>{data}</option>\r\n          })}\r\n        </select>\r\n        <div className=\"SelectBTN\" onClick={() => { MakeMarker2(SportType2, SportType3) }}></div>\r\n      </div>\r\n      <NaverMap\r\n        id=\"react-naver-maps-introduction\"\r\n        center={Center}\r\n        defaultZoom={10}\r\n      >\r\n\r\n        <div className=\"ToMeBTN\" onClick={PanToMe} />\r\n        <Marker\r\n          key=\"mypos\"\r\n          position={MyPosition}\r\n          animation={2}\r\n          icon={placeholder}\r\n        />\r\n        {MarkerContainer}\r\n      </NaverMap>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n// reducer에 action을 알리는 함수 \r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateState: (x, y) => dispatch(actionCreators.updateState(x, y))\r\n  };\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(NaverMapComponent);","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\MapPage.js",["46","47"],"import React from 'react';\r\nimport { RenderAfterNavermapsLoaded } from 'react-naver-maps'; // 패키지 불러오기\r\nimport NaverMapComponent from './NaverMapComponent';\r\n\r\n// redux 관련\r\nimport { connect } from 'react-redux';\r\nimport { actionCreators } from '../store';\r\n\r\nfunction MapPage(props) {\r\n\r\n    return (\r\n        <div className=\"Router_Div\">\r\n            <RenderAfterNavermapsLoaded\r\n                ncpClientId={'ce25x52vaf'} // 자신의 네이버 계정에서 발급받은 Client ID\r\n                error={<p>Maps Load Error</p>}\r\n                loading={<p>Maps Loading...</p>}\r\n            >\r\n                <NaverMapComponent />\r\n            </RenderAfterNavermapsLoaded>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapPage;","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\SubwayPage.js",["48","49","50","51","52","53","54"],"import React, { useEffect, useState } from 'react';\r\nimport { NaverMap, Marker } from 'react-naver-maps'; // 패키지 불러오기\r\nimport axios from 'axios';\r\nimport { Modal } from 'antd';\r\nimport swal from 'sweetalert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { RenderAfterNavermapsLoaded } from 'react-naver-maps'; // 패키지 불러오기\r\nimport '../CSSs/SubwayPage.css';\r\n\r\n// Image import\r\nimport warning from '../Images/warning.png'\r\nimport menuIcon from '../Images/menuIcon.png'\r\n\r\n// Component import\r\nimport 'antd/dist/antd.css';\r\nimport Subway from '../Data/Subway.json';\r\nimport '../CSSs/NaverMapComponent.css';\r\nimport { connect } from 'react-redux';\r\n\r\n// 전역 변수\r\nlet list2 = [];\r\n\r\nfunction SubwayPage(props) {\r\n\r\n    const [Markers, setMarkers] = useState([]);\r\n    const [MyPos, setMyPos] = useState({\r\n        lat: props.POS.x,\r\n        lng: props.POS.y\r\n    })\r\n\r\n\r\n    let arrivelist = '잠시만 기다려주세요....';\r\n    // ■■■■■■■■■■■■■■■■■■■■■■■■■■■ 로드 시 지하철 실시간 도착 정보 받아오기 ■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n    const getStationTimeData = async (subwayname) => {\r\n        arrivelist = '';    //이전에 있던 데이터를 지워주고\r\n        try {\r\n            const response = await axios.get(`https://under-construction-project.herokuapp.com/api/${subwayname}/`);\r\n            //   console.log(response.data.realtimeArrivalList);\r\n            response.data.realtimeArrivalList.forEach(data => {\r\n                arrivelist += `${data.trainLineNm} ${data.arvlMsg2} \\n`\r\n            })\r\n            swal(arrivelist);\r\n        } catch (e) {\r\n            arrivelist = \"도착정보가 없습니다.\";\r\n            swal(arrivelist);\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Subway useEffect\")\r\n        console.log(props.POS);\r\n        let list2 = [];\r\n        // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 지하철 공사중인 Data api불러오는 코드 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n        const GetConstDataFromAPI = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    'https://under-construction-project.herokuapp.com/api/'\r\n                ).then(answer => {\r\n                    console.log(answer);\r\n                    answer.data.forEach(data => {\r\n                        let station_information = [];\r\n                        data.elevating_equipment.forEach(data2 => {\r\n                            station_information.push(`▲${data2.location} ${data2.facility} 상태:${data2.status} `)\r\n                        })\r\n                        list2.push(\r\n                            <Marker\r\n                                key={data.id}\r\n                                position={{ lat: Subway[data.name][0], lng: Subway[data.name][1] }}\r\n                                animation={2}\r\n                                icon={warning}\r\n                                onClick={() => {\r\n                                    swal(`${data.name}역`, {\r\n                                        buttons: {\r\n                                            공사정보: {\r\n                                                value: \"const\"\r\n                                            },\r\n                                            도착정보: {\r\n                                                value: \"arrive\",\r\n                                            }\r\n                                        },\r\n                                    })\r\n                                        .then((value) => {\r\n                                            switch (value) {\r\n                                                case \"const\":\r\n                                                    swal(station_information.join(`\\n`));\r\n                                                    break;\r\n\r\n                                                default:\r\n                                                    getStationTimeData(data.name);      // 지하철 도착정보 불러와서 swal을 띄워준다.\r\n                                            }\r\n                                        });\r\n\r\n\r\n                                }\r\n                                }\r\n                            />\r\n                        )\r\n                    });\r\n                    setMarkers(list2);\r\n                })\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n\r\n        }\r\n        GetConstDataFromAPI();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Router_Div\">\r\n            <div className=\"TitleLine_BackPoint\"></div>\r\n            <div className=\"TitleLine\">\r\n            <p className=\"Mobile_text1\"><img className=\"TopMenuIcon\" src={menuIcon}/> 지하철 승강설비 현황</p>\r\n                <p className=\"Subway_text\">서울 지하철역들 중 승강 설비 공사 현황</p>\r\n                <p className=\"Subway_text\">승강 설비 현황 및 도착 시간을 확인해보세요!(약 1~2초간의 소요가 발생할 수 있습니다.)</p>\r\n            </div>\r\n            <RenderAfterNavermapsLoaded\r\n                ncpClientId={'ce25x52vaf'} // 자신의 네이버 계정에서 발급받은 Client ID\r\n                error={<p>Maps Load Error</p>}\r\n                loading={<p>Maps Loading...</p>}\r\n            >\r\n                <NaverMap\r\n                    id=\"react-naver-maps-introduction\"\r\n                    defaultZoom={12}\r\n                    center={MyPos}\r\n                >\r\n                    <Marker\r\n                        key='myposition'\r\n                        position={MyPos}\r\n                        animation={2}\r\n                    />\r\n                    {Markers}\r\n                </NaverMap>\r\n            </RenderAfterNavermapsLoaded>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state, onwProps) {\r\n    return { POS: state };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SubwayPage);","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\ChartPage.js",["55","56","57","58","59","60"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\store.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":9,"column":8,"nodeType":"67","messageId":"68","endLine":9,"endColumn":22},{"ruleId":"70","severity":1,"message":"71","line":134,"column":7,"nodeType":"72","messageId":"73","endLine":387,"endColumn":8},{"ruleId":"74","severity":1,"message":"75","line":401,"column":6,"nodeType":"76","endLine":401,"endColumn":8,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":409,"column":37,"nodeType":"80","endLine":409,"endColumn":82},{"ruleId":"65","severity":1,"message":"81","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":17},{"ruleId":"65","severity":1,"message":"82","line":7,"column":10,"nodeType":"67","messageId":"68","endLine":7,"endColumn":24},{"ruleId":"65","severity":1,"message":"83","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":15},{"ruleId":"65","severity":1,"message":"84","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":24},{"ruleId":"65","severity":1,"message":"85","line":21,"column":5,"nodeType":"67","messageId":"68","endLine":21,"endColumn":10},{"ruleId":"65","severity":1,"message":"86","line":26,"column":19,"nodeType":"67","messageId":"68","endLine":26,"endColumn":27},{"ruleId":"65","severity":1,"message":"87","line":58,"column":23,"nodeType":"67","messageId":"68","endLine":58,"endColumn":31},{"ruleId":"74","severity":1,"message":"88","line":109,"column":8,"nodeType":"76","endLine":109,"endColumn":10,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"79","line":117,"column":41,"nodeType":"80","endLine":117,"endColumn":86},{"ruleId":"78","severity":1,"message":"79","line":253,"column":53,"nodeType":"80","endLine":253,"endColumn":99},{"ruleId":"78","severity":1,"message":"79","line":260,"column":53,"nodeType":"80","endLine":260,"endColumn":99},{"ruleId":"90","severity":1,"message":"91","line":285,"column":32,"nodeType":"92","messageId":"93","endLine":285,"endColumn":34},{"ruleId":"90","severity":1,"message":"91","line":346,"column":25,"nodeType":"92","messageId":"93","endLine":346,"endColumn":27},{"ruleId":"90","severity":1,"message":"91","line":377,"column":32,"nodeType":"92","messageId":"93","endLine":377,"endColumn":34},{"ruleId":"94","severity":1,"message":"95","line":404,"column":14,"nodeType":"67","messageId":"96","endLine":404,"endColumn":15},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'NaverMapComponent' is defined but never used.","Identifier","unusedVar","'hamburgerImage' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetClassInfo' and 'getLocation'. Either include them or remove the dependency array.","ArrayExpression",["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'connect' is defined but never used.","'actionCreators' is defined but never used.","'Modal' is defined but never used.","'CircularProgress' is defined but never used.","'list2' is assigned a value but never used.","'setMyPos' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStationTimeData' and 'props.POS'. Either include them or remove the dependency array.",["100"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [GetClassInfo, getLocation]",{"range":"105","text":"106"},"Update the dependencies array to be: [getStationTimeData, props.POS]",{"range":"107","text":"108"},[12322,12324],"[GetClassInfo, getLocation]",[4351,4353],"[getStationTimeData, props.POS]"]