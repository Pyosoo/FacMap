[{"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\Navaibar.js":"2","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\store.js":"3","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\MapPage.js":"4","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\App.js":"5","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\NaverMapComponent.js":"6","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\ChartPage.js":"7","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\SubwayPage.js":"8"},{"size":293,"mtime":1607426451857,"results":"9","hashOfConfig":"10"},{"size":4087,"mtime":1607690291465,"results":"11","hashOfConfig":"10"},{"size":1496,"mtime":1607361295551,"results":"12","hashOfConfig":"10"},{"size":748,"mtime":1607419947319,"results":"13","hashOfConfig":"10"},{"size":204,"mtime":1607246157944,"results":"14","hashOfConfig":"10"},{"size":16502,"mtime":1607624403639,"results":"15","hashOfConfig":"10"},{"size":206,"mtime":1607270394249,"results":"16","hashOfConfig":"10"},{"size":6255,"mtime":1607624845624,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12op0yh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\index.js",[],["37","38"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\Navaibar.js",["39","40"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\store.js",[],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\MapPage.js",["41","42"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\NaverMapComponent.js",["43","44","45"],"C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\ChartPage.js",["46","47","48"],"import React, { useEffect, useState } from 'react';\r\nimport ClassInfo from '../Data/ClassInfo.json';\r\n\r\n\r\nfunction ChartPage() {\r\n    return(\r\n        <div>chart</div>\r\n    )\r\n}\r\n\r\nexport default ChartPage;","C:\\Users\\Administrator\\Desktop\\react\\facilmap\\src\\Components\\SubwayPage.js",["49","50","51","52","53","54","55"],"import React, { useEffect, useState } from 'react';\r\nimport { NaverMap, Marker } from 'react-naver-maps'; // 패키지 불러오기\r\nimport axios from 'axios';\r\nimport { Modal } from 'antd';\r\nimport swal from 'sweetalert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { RenderAfterNavermapsLoaded } from 'react-naver-maps'; // 패키지 불러오기\r\nimport '../CSSs/SubwayPage.css';\r\n\r\n// Image import\r\nimport warning from '../Images/warning.png'\r\nimport menuIcon from '../Images/menuIcon.png'\r\n\r\n// Component import\r\nimport 'antd/dist/antd.css';\r\nimport Subway from '../Data/Subway.json';\r\nimport '../CSSs/NaverMapComponent.css';\r\nimport { connect } from 'react-redux';\r\n\r\n// 전역 변수\r\nlet list2 = [];\r\n\r\nfunction SubwayPage(props) {\r\n\r\n    const [Markers, setMarkers] = useState([]);\r\n    const [MyPos, setMyPos] = useState({\r\n        lat: props.POS.x,\r\n        lng: props.POS.y\r\n    })\r\n\r\n\r\n    let arrivelist = '잠시만 기다려주세요....';\r\n    // ■■■■■■■■■■■■■■■■■■■■■■■■■■■ 로드 시 지하철 실시간 도착 정보 받아오기 ■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n    const getStationTimeData = async (subwayname) => {\r\n        arrivelist = '';    //이전에 있던 데이터를 지워주고\r\n        try {\r\n            const response = await axios.get(`https://under-construction-project.herokuapp.com/api/${subwayname}/`);\r\n            //   console.log(response.data.realtimeArrivalList);\r\n            response.data.realtimeArrivalList.forEach(data => {\r\n                arrivelist += `${data.trainLineNm} ${data.arvlMsg2} \\n`\r\n            })\r\n            swal(arrivelist);\r\n        } catch (e) {\r\n            arrivelist = \"도착정보가 없습니다.\";\r\n            swal(arrivelist);\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Subway useEffect\")\r\n        console.log(props.POS);\r\n        let list2 = [];\r\n        // ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 지하철 공사중인 Data api불러오는 코드 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n        const GetConstDataFromAPI = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    'https://under-construction-project.herokuapp.com/api/'\r\n                ).then(answer => {\r\n                    console.log(answer);\r\n                    answer.data.forEach(data => {\r\n                        let station_information = [];\r\n                        data.elevating_equipment.forEach(data2 => {\r\n                            station_information.push(`▲${data2.location} ${data2.facility} 상태:${data2.status} `)\r\n                        })\r\n                        list2.push(\r\n                            <Marker\r\n                                key={data.id}\r\n                                position={{ lat: Subway[data.name][0], lng: Subway[data.name][1] }}\r\n                                animation={2}\r\n                                icon={warning}\r\n                                onClick={() => {\r\n                                    swal(`${data.name}역`, {\r\n                                        buttons: {\r\n                                            공사정보: {\r\n                                                value: \"const\"\r\n                                            },\r\n                                            도착정보: {\r\n                                                value: \"arrive\",\r\n                                            }\r\n                                        },\r\n                                    })\r\n                                        .then((value) => {\r\n                                            switch (value) {\r\n                                                case \"const\":\r\n                                                    swal(station_information.join(`\\n`));\r\n                                                    break;\r\n\r\n                                                default:\r\n                                                    getStationTimeData(data.name);      // 지하철 도착정보 불러와서 swal을 띄워준다.\r\n                                            }\r\n                                        });\r\n\r\n\r\n                                }\r\n                                }\r\n                            />\r\n                        )\r\n                    });\r\n                    setMarkers(list2);\r\n                })\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n\r\n        }\r\n        GetConstDataFromAPI();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Router_Div\">\r\n            <div className=\"TitleLine_BackPoint\"></div>\r\n            <div className=\"TitleLine\">\r\n            <p className=\"Mobile_text1\"><img className=\"TopMenuIcon\" src={menuIcon}/> 지하철 승강설비 현황</p>\r\n                <p>서울 지하철역들 중 승강 설비 공사 현황</p>\r\n                <p>승강 설비 현황 및 도착 시간을 확인해보세요!(약 1~2초간의 소요가 발생할 수 있습니다.)</p>\r\n            </div>\r\n            <RenderAfterNavermapsLoaded\r\n                ncpClientId={'ce25x52vaf'} // 자신의 네이버 계정에서 발급받은 Client ID\r\n                error={<p>Maps Load Error</p>}\r\n                loading={<p>Maps Loading...</p>}\r\n            >\r\n                <NaverMap\r\n                    id=\"react-naver-maps-introduction\"\r\n                    defaultZoom={12}\r\n                    center={MyPos}\r\n                >\r\n                    <Marker\r\n                        key='myposition'\r\n                        position={MyPos}\r\n                        animation={2}\r\n                    />\r\n                    {Markers}\r\n                </NaverMap>\r\n            </RenderAfterNavermapsLoaded>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state, onwProps) {\r\n    return { POS: state };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SubwayPage);",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":9,"column":8,"nodeType":"62","messageId":"63","endLine":9,"endColumn":22},{"ruleId":"60","severity":1,"message":"65","line":6,"column":10,"nodeType":"62","messageId":"63","endLine":6,"endColumn":17},{"ruleId":"60","severity":1,"message":"66","line":7,"column":10,"nodeType":"62","messageId":"63","endLine":7,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":134,"column":7,"nodeType":"69","messageId":"70","endLine":387,"endColumn":8},{"ruleId":"71","severity":1,"message":"72","line":401,"column":6,"nodeType":"73","endLine":401,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":409,"column":37,"nodeType":"77","endLine":409,"endColumn":82},{"ruleId":"60","severity":1,"message":"78","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"79","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"80","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":17},{"ruleId":"60","severity":1,"message":"81","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":15},{"ruleId":"60","severity":1,"message":"82","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":24},{"ruleId":"60","severity":1,"message":"83","line":21,"column":5,"nodeType":"62","messageId":"63","endLine":21,"endColumn":10},{"ruleId":"60","severity":1,"message":"84","line":26,"column":19,"nodeType":"62","messageId":"63","endLine":26,"endColumn":27},{"ruleId":"60","severity":1,"message":"85","line":58,"column":23,"nodeType":"62","messageId":"63","endLine":58,"endColumn":31},{"ruleId":"71","severity":1,"message":"86","line":109,"column":8,"nodeType":"73","endLine":109,"endColumn":10,"suggestions":"87"},{"ruleId":"75","severity":1,"message":"76","line":117,"column":41,"nodeType":"77","endLine":117,"endColumn":86},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'NaverMapComponent' is defined but never used.","Identifier","unusedVar","'hamburgerImage' is defined but never used.","'connect' is defined but never used.","'actionCreators' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetClassInfo' and 'getLocation'. Either include them or remove the dependency array.","ArrayExpression",["90"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'ClassInfo' is defined but never used.","'Modal' is defined but never used.","'CircularProgress' is defined but never used.","'list2' is assigned a value but never used.","'setMyPos' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getStationTimeData' and 'props.POS'. Either include them or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [GetClassInfo, getLocation]",{"range":"96","text":"97"},"Update the dependencies array to be: [getStationTimeData, props.POS]",{"range":"98","text":"99"},[12322,12324],"[GetClassInfo, getLocation]",[4351,4353],"[getStationTimeData, props.POS]"]